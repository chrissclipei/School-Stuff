#BlueJ class context
comment0.params=
comment0.target=ChessBoard()
comment1.params=piece
comment1.target=Node\ insert(Node)
comment10.params=one\ other
comment10.target=boolean\ isDifferent(Node,\ Node)
comment11.params=
comment11.target=void\ isOneAttackingOther()
comment12.params=rowAttacked\ colAttacked
comment12.target=Node\ findAttacker(int,\ int)
comment13.params=stringToWrite
comment13.target=void\ writeToAnalysisFile(java.lang.String)
comment14.params=board_no
comment14.target=void\ convertFromListToMatrixAndPrint(int)
comment15.params=king
comment15.target=boolean\ canKingMoveOutOfCheck(Node)
comment16.params=
comment16.target=java.lang.String\ checkForChecks()
comment17.params=
comment17.target=void\ readFromInputFile()
comment18.params=c\ query\ board_no
comment18.target=void\ performOperations(ChessBoard,\ int[],\ int)
comment19.params=args
comment19.target=void\ main(java.lang.String[])
comment2.params=pieceToDelete
comment2.target=void\ remove(Node)
comment3.params=row\ col
comment3.target=Node\ findChessPiece(int,\ int)
comment4.params=pieceType
comment4.target=int\ countPiecesOfType(char)
comment5.params=pieceType
comment5.target=Node\ findPieceOfType(char)
comment6.params=row\ col
comment6.target=int\ countPiecesInLocation(int,\ int)
comment7.params=
comment7.target=boolean\ twoPiecesOccupySamePosition()
comment8.params=
comment8.target=boolean\ checkValidity()
comment9.params=query
comment9.target=char\ findChessPiece(int[])
numComments=20
