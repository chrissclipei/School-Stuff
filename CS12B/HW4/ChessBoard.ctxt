#BlueJ class context
comment0.params=
comment0.target=ChessBoard()
comment1.params=list\ pieceToCapture
comment1.target=Node\ capture(Node,\ Node)
comment10.params=head\ kingColor
comment10.target=boolean\ determineRealCheckmate(Node,\ boolean)
comment11.params=stringToWrite
comment11.target=void\ writeToAnalysisFile(java.lang.String)
comment12.params=
comment12.target=void\ readFromInputFile()
comment13.params=list\ whoseTurn\ recursionDepth
comment13.target=int\ takeATurn(Node,\ boolean,\ int)
comment14.params=c
comment14.target=void\ performOperations(ChessBoard)
comment15.params=args
comment15.target=void\ main(java.lang.String[])
comment2.params=row\ col
comment2.target=boolean\ isOutOfBoard(int,\ int)
comment3.params=list\ piece\ dest\ row\ col\ shouldPrint
comment3.target=boolean\ placePiece(Node,\ Node,\ Node,\ int,\ int,\ boolean)
comment4.params=list\ validMoves\ startRow\ startCol\ destRow\ destCol\ shouldPrint
comment4.target=boolean\ checkBlock(Node,\ int[],\ int,\ int,\ int,\ int,\ boolean)
comment5.params=list\ pieceToMove\ pieceInDestination\ newRowToMoveTo\ newColToMoveTo\ shouldPrint
comment5.target=boolean\ movePawns(Node,\ Node,\ Node,\ int,\ int,\ boolean)
comment6.params=list\ query\ shouldPrint
comment6.target=boolean[]\ makeMoves(Node,\ int[],\ boolean)
comment7.params=list\ kingColor
comment7.target=Node\ getKingNode(Node,\ boolean)
comment8.params=list\ kingColor
comment8.target=boolean\ determineCheck(Node,\ boolean)
comment9.params=head\ kingColor
comment9.target=boolean\ determineWeakCheckmate(Node,\ boolean)
numComments=16
