// To check HW5:
// First copy this file and input.txt into directory with your assignment
// Run the following commands:
// make
// javac CheckHW5.java
// java CheckHW5

import java.io.*;
import java.util.HashMap;

class CheckHW5 {


    // Convenient method to print error message and exit
    // Input: String message to be printed
    // Output: void, simply exits program

    private static void errExit(String message) {

        System.err.println(message);
        System.exit(1);
    }


    // Method to read the solution from analysis.txt generated by your program
    // Input: Filename passed via command line agrument
    // Output: boolean, it comes handy to say whether a particular case passed or not

    private static boolean readFromAnalysisFile(String ip, String op) {

        // ready the arguments before reading
        int count_ip = 1;
        int count_op = 1;
        HashMap<Integer, String> ipMapper = new HashMap<Integer, String>();
        HashMap<Integer, String> opMapper = new HashMap<Integer, String>();

        try {
            BufferedReader readerIP = new BufferedReader(new FileReader(ip));
            BufferedReader readerOP = new BufferedReader(new FileReader(op));

            String line;
            while ((line = readerIP.readLine()) != null) {
              ipMapper.put(count_ip, line);
              count_ip++;
            }

            while((line = readerOP.readLine()) != null) {
              opMapper.put(count_op, line);
              count_op++;
            }

            if( count_op != count_ip) {
              errExit("The lines in your analysis file does not match the ones in input file");
            }

            readerIP.close();
            readerOP.close();

        }
        catch (Exception e) {
            errExit("Exception occurred trying to read file"); // throw a generic exception if failure to read occurs
        }
        return true;
    }


    // Main method
    // Input: No arguments
    // Output: void

    public static void main(String[] args) {
        File f_jar = new File("Bard.jar");
        if (!f_jar.exists())
            errExit("Note: No file names Bard.jar");
        File f_dir = new File("../HW5");
        if (!f_dir.exists())
            errExit("Note: Directory not named HW5");
        File f_input = new File("input.txt");
        if (!f_input.exists())
            errExit("Note: input.txt file not found");
        File f_output = new File("analysis.txt");
        if (f_output.exists())
            errExit("Delete analysis.txt and run again");
        try {
            Process proc = Runtime.getRuntime().exec(new String[]{"java", "-jar", "Bard.jar"});
            BufferedReader reader =
                new BufferedReader(new InputStreamReader(proc.getInputStream()));
            while ((reader.readLine()) != null) {}
            proc.waitFor();
          }
          catch(Exception e) {
            errExit("Student's program thows an exception: " + e);
          }

          readFromAnalysisFile("input.txt", "analysis.txt");
    }

}

// End
